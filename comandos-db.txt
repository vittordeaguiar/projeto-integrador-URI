# Tabelas DB

CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  email VARCHAR NOT NULL UNIQUE,
  name VARCHAR NOT NULL,
  role VARCHAR DEFAULT 'atendente' CHECK (role IN ('atendente', 'admin', 'supervisor')),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE TABLE tickets (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  title VARCHAR NOT NULL,
  description TEXT NOT NULL,
  status VARCHAR DEFAULT 'aberto' CHECK (status IN ('aberto', 'em_andamento', 'resolvido', 'cancelado')),
  priority VARCHAR DEFAULT 'normal' CHECK (priority IN ('baixa', 'normal', 'alta', 'urgente')),
  category VARCHAR,
  
  -- Informações do cliente
  customer_name VARCHAR NOT NULL,
  customer_email VARCHAR,
  customer_phone VARCHAR,
  
  -- Relacionamento com usuários
  assigned_to UUID REFERENCES users(id),
  created_by UUID REFERENCES users(id),
  
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE TABLE ticket_messages (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  ticket_id UUID NOT NULL REFERENCES tickets(id) ON DELETE CASCADE,
  user_id UUID REFERENCES users(id),
  message TEXT NOT NULL,
  is_internal BOOLEAN DEFAULT false, -- Para notas internas
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE TABLE ticket_attachments (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  ticket_id UUID NOT NULL REFERENCES tickets(id) ON DELETE CASCADE,
  file_name VARCHAR NOT NULL,
  file_url VARCHAR NOT NULL,
  file_size INTEGER,
  uploaded_by UUID REFERENCES users(id),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Habilitar RLS em todas as tabelas
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE tickets ENABLE ROW LEVEL SECURITY;
ALTER TABLE ticket_messages ENABLE ROW LEVEL SECURITY;
ALTER TABLE ticket_attachments ENABLE ROW LEVEL SECURITY;

-- Políticas para users
CREATE POLICY "Users podem ver todos os usuários"
  ON users FOR SELECT
  TO authenticated
  USING (true);

-- Políticas para tickets
CREATE POLICY "Qualquer pessoa pode criar tickets"
  ON tickets FOR INSERT
  TO anon, authenticated
  WITH CHECK (true);

CREATE POLICY "Usuários autenticados podem ver todos os tickets"
  ON tickets FOR SELECT
  TO authenticated
  USING (true);

CREATE POLICY "Usuários podem atualizar tickets"
  ON tickets FOR UPDATE
  TO authenticated
  USING (true);

-- Políticas para ticket_messages
CREATE POLICY "Qualquer pessoa pode adicionar mensagens"
  ON ticket_messages FOR INSERT
  TO anon, authenticated
  WITH CHECK (true);

CREATE POLICY "Todos podem ver mensagens não internas"
  ON ticket_messages FOR SELECT
  TO anon, authenticated
  USING (is_internal = false OR auth.role() = 'authenticated');
  
